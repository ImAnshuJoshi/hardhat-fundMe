{
  "address": "0x650b681ED2E188E4d2e1d786D5d3A66E864442eE",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x44a676a183048f1adc58e8d39ddd35fa4c47a2d7d293cdb5df91461700349c0a",
  "receipt": {
    "to": null,
    "from": "0x490aeeA34202D19b42731f00371e949c01F2eC53",
    "contractAddress": "0x650b681ED2E188E4d2e1d786D5d3A66E864442eE",
    "transactionIndex": 23,
    "gasUsed": "878665",
    "logsBloom": "0x
    "blockHash": "0xa7e3964cf3bac58437dc8ba74544995df1772f0bc9e6fa479393e420e2eaa39e",
    "transactionHash": "0x44a676a183048f1adc58e8d39ddd35fa4c47a2d7d293cdb5df91461700349c0a",
    "logs": [],
    "blockNumber": 3200455,
    "cumulativeGasUsed": "3971047",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xaEA2808407B7319A31A383B6F8B60f04BCa23cE2"
  ],
  "numDeployments": 1,
  "solcInputHash": "1c9c5891b1a6ea4f9a64ba6dbbc67bf9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\ncontract FundMe {\\n\\n    using PriceConverter for uint256;\\n\\n\\n    AggregatorV3Interface private s_priceFeed;\\n    address private immutable i_owner;\\n    mapping(address=>uint256) private s_addressToAmount;\\n    address[] private s_funders;\\n    uint256 public constant MINIMUM_USD = 50* 10 ** 18;\\n\\n    modifier onlyOwner{\\n        if(msg.sender != i_owner) \\n        revert FundMe_NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeed){\\n        s_priceFeed = AggregatorV3Interface(priceFeed);\\n        i_owner = msg.sender;\\n    }   \\n\\n    function fund() public payable{\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to fund more eth ....\\\"\\n        );\\n        s_addressToAmount[msg.sender]+=msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner{\\n        payable(msg.sender).transfer(address(this).balance);\\n        for(uint256 funderIndex = 0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmount[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n    }\\n\\n    function getAddressToAmountFunded(address fundingAddress) public view returns (uint256){\\n        return s_addressToAmount[fundingAddress];\\n    }\\n\\n    function getVersion() public view returns(uint256){\\n        return s_priceFeed.version();\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address){\\n        return s_funders[index];\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface){\\n        return s_priceFeed;\\n    } \\n}\",\"keccak256\":\"0xcadde69754d8d868bb06a0bf193cc9797939c16f340ec4b21097aa2fcf70778a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    return uint256(answer * 10000000000);\\n  }\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    return ethAmountInUsd;\\n  }\\n}\",\"keccak256\":\"0x556ca044f2e2eb3f5d32cb1c6a79aa512fe394ed752dfbada5a5acb73b805711\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405162000fe638038062000fe6833981810160405281019061003491906100c6565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610141565b6000815190506100c08161012a565b92915050565b6000602082840312156100dc576100db610125565b5b60006100ea848285016100b1565b91505092915050565b60006100fe82610105565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610133816100f3565b811461013e57600080fd5b50565b60805160601c610e7f62000167600039600081816102b801526104a20152610e7f6000f3fe60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461012a5780639e87a5cd14610155578063b60d428814610180578063d7b4750c1461018a5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a2919061085c565b6101c7565b6040516100b49190610a04565b60405180910390f35b3480156100c957600080fd5b506100d2610210565b6040516100df9190610a04565b60405180910390f35b3480156100f457600080fd5b506100fd6102b6565b005b34801561010b57600080fd5b50610114610491565b6040516101219190610a04565b60405180910390f35b34801561013657600080fd5b5061013f61049e565b60405161014c91906109ae565b60405180910390f35b34801561016157600080fd5b5061016a6104c6565b60405161017791906109c9565b60405180910390f35b6101886104ef565b005b34801561019657600080fd5b506101b160048036038101906101ac9190610889565b610628565b6040516101be91906109ae565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561027957600080fd5b505afa15801561028d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b191906108b6565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033b576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610381573d6000803e3d6000fd5b5060005b60028054905081101561042e576000600282815481106103a8576103a7610d61565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042690610cba565b915050610385565b50600067ffffffffffffffff81111561044a57610449610d90565b5b6040519080825280602002602001820160405280156104785781602001602082028036833780820191505090505b506002908051906020019061048e92919061074c565b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061052c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067090919063ffffffff16565b101561056d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610564906109e4565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105bc9190610a30565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006002828154811061063e5761063d610d61565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061067c836106ac565b90506000670de0b6b3a764000085836106959190610bce565b61069f9190610a86565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f557600080fd5b505afa158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d91906108e3565b5050509150506402540be400816107449190610ab7565b915050919050565b8280548282559060005260206000209081019282156107c5579160200282015b828111156107c45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061076c565b5b5090506107d291906107d6565b5090565b5b808211156107ef5760008160009055506001016107d7565b5090565b60008135905061080281610ded565b92915050565b60008151905061081781610e04565b92915050565b60008135905061082c81610e1b565b92915050565b60008151905061084181610e1b565b92915050565b60008151905061085681610e32565b92915050565b60006020828403121561087257610871610dbf565b5b6000610880848285016107f3565b91505092915050565b60006020828403121561089f5761089e610dbf565b5b60006108ad8482850161081d565b91505092915050565b6000602082840312156108cc576108cb610dbf565b5b60006108da84828501610832565b91505092915050565b600080600080600060a086880312156108ff576108fe610dbf565b5b600061090d88828901610847565b955050602061091e88828901610808565b945050604061092f88828901610832565b935050606061094088828901610832565b925050608061095188828901610847565b9150509295509295909350565b61096781610c28565b82525050565b61097681610c84565b82525050565b6000610989601e83610a1f565b915061099482610dc4565b602082019050919050565b6109a881610c64565b82525050565b60006020820190506109c3600083018461095e565b92915050565b60006020820190506109de600083018461096d565b92915050565b600060208201905081810360008301526109fd8161097c565b9050919050565b6000602082019050610a19600083018461099f565b92915050565b600082825260208201905092915050565b6000610a3b82610c64565b9150610a4683610c64565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a7b57610a7a610d03565b5b828201905092915050565b6000610a9182610c64565b9150610a9c83610c64565b925082610aac57610aab610d32565b5b828204905092915050565b6000610ac282610c3a565b9150610acd83610c3a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b0c57610b0b610d03565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b4957610b48610d03565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b8657610b85610d03565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bc357610bc2610d03565b5b828202905092915050565b6000610bd982610c64565b9150610be483610c64565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c1d57610c1c610d03565b5b828202905092915050565b6000610c3382610c44565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c8f82610c96565b9050919050565b6000610ca182610ca8565b9050919050565b6000610cb382610c44565b9050919050565b6000610cc582610c64565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cf857610cf7610d03565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f596f75206e65656420746f2066756e64206d6f726520657468202e2e2e2e0000600082015250565b610df681610c28565b8114610e0157600080fd5b50565b610e0d81610c3a565b8114610e1857600080fd5b50565b610e2481610c64565b8114610e2f57600080fd5b50565b610e3b81610c6e565b8114610e4657600080fd5b5056fea26469706673582212200051f7ddcd87b60c728c4ddedf9152c02ca3253a54c7e7707947f467c52e6af664736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c8063893d20e81161004e578063893d20e81461012a5780639e87a5cd14610155578063b60d428814610180578063d7b4750c1461018a5761007b565b80630343fb25146100805780630d8e6e2c146100bd5780633ccfd60b146100e85780636b69a592146100ff575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a2919061085c565b6101c7565b6040516100b49190610a04565b60405180910390f35b3480156100c957600080fd5b506100d2610210565b6040516100df9190610a04565b60405180910390f35b3480156100f457600080fd5b506100fd6102b6565b005b34801561010b57600080fd5b50610114610491565b6040516101219190610a04565b60405180910390f35b34801561013657600080fd5b5061013f61049e565b60405161014c91906109ae565b60405180910390f35b34801561016157600080fd5b5061016a6104c6565b60405161017791906109c9565b60405180910390f35b6101886104ef565b005b34801561019657600080fd5b506101b160048036038101906101ac9190610889565b610628565b6040516101be91906109ae565b60405180910390f35b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561027957600080fd5b505afa15801561028d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b191906108b6565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033b576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610381573d6000803e3d6000fd5b5060005b60028054905081101561042e576000600282815481106103a8576103a7610d61565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061042690610cba565b915050610385565b50600067ffffffffffffffff81111561044a57610449610d90565b5b6040519080825280602002602001820160405280156104785781602001602082028036833780820191505090505b506002908051906020019061048e92919061074c565b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b188000061052c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067090919063ffffffff16565b101561056d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610564906109e4565b60405180910390fd5b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105bc9190610a30565b925050819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006002828154811061063e5761063d610d61565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061067c836106ac565b90506000670de0b6b3a764000085836106959190610bce565b61069f9190610a86565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106f557600080fd5b505afa158015610709573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072d91906108e3565b5050509150506402540be400816107449190610ab7565b915050919050565b8280548282559060005260206000209081019282156107c5579160200282015b828111156107c45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061076c565b5b5090506107d291906107d6565b5090565b5b808211156107ef5760008160009055506001016107d7565b5090565b60008135905061080281610ded565b92915050565b60008151905061081781610e04565b92915050565b60008135905061082c81610e1b565b92915050565b60008151905061084181610e1b565b92915050565b60008151905061085681610e32565b92915050565b60006020828403121561087257610871610dbf565b5b6000610880848285016107f3565b91505092915050565b60006020828403121561089f5761089e610dbf565b5b60006108ad8482850161081d565b91505092915050565b6000602082840312156108cc576108cb610dbf565b5b60006108da84828501610832565b91505092915050565b600080600080600060a086880312156108ff576108fe610dbf565b5b600061090d88828901610847565b955050602061091e88828901610808565b945050604061092f88828901610832565b935050606061094088828901610832565b925050608061095188828901610847565b9150509295509295909350565b61096781610c28565b82525050565b61097681610c84565b82525050565b6000610989601e83610a1f565b915061099482610dc4565b602082019050919050565b6109a881610c64565b82525050565b60006020820190506109c3600083018461095e565b92915050565b60006020820190506109de600083018461096d565b92915050565b600060208201905081810360008301526109fd8161097c565b9050919050565b6000602082019050610a19600083018461099f565b92915050565b600082825260208201905092915050565b6000610a3b82610c64565b9150610a4683610c64565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a7b57610a7a610d03565b5b828201905092915050565b6000610a9182610c64565b9150610a9c83610c64565b925082610aac57610aab610d32565b5b828204905092915050565b6000610ac282610c3a565b9150610acd83610c3a565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b0c57610b0b610d03565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b4957610b48610d03565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b8657610b85610d03565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bc357610bc2610d03565b5b828202905092915050565b6000610bd982610c64565b9150610be483610c64565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c1d57610c1c610d03565b5b828202905092915050565b6000610c3382610c44565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610c8f82610c96565b9050919050565b6000610ca182610ca8565b9050919050565b6000610cb382610c44565b9050919050565b6000610cc582610c64565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cf857610cf7610d03565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f596f75206e65656420746f2066756e64206d6f726520657468202e2e2e2e0000600082015250565b610df681610c28565b8114610e0157600080fd5b50565b610e0d81610c3a565b8114610e1857600080fd5b50565b610e2481610c64565b8114610e2f57600080fd5b50565b610e3b81610c6e565b8114610e4657600080fd5b5056fea26469706673582212200051f7ddcd87b60c728c4ddedf9152c02ca3253a54c7e7707947f467c52e6af664736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}